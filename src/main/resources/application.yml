server:
  port: 8080

spring:
  application:
    name: traditional-market
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/${DB_NAME}
    username: ${DB_ID}
    password: ${DB_PW}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_ID}
            client-secret: ${GOOGLE_PW}
            redirect-uri: "http://localhost:8080/login/oauth2/code/google"
            authorization-grant-type: authorization_code
            scope: email, profile
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://accounts.google.com/o/oauth2/token


          naver:
            client-id: ${NAVER_ID}
            client-secret: ${NAVER_PW}
            redirect-uri: "http://localhost:8080/login/oauth2/code/naver" # callback uri
            authorization-grant-type: authorization_code
            scope: email, nickname
            client-name: Naver

          kakao:
            client-id: ${KAKAO_ID}
            client-secret: ${KAKAO_PW}
            redirect-uri: "http://localhost:8080/login/oauth2/code/kakao" # callback uri
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: profile_nickname, account_email, profile_image #동의 항목
            client-name: Kakao
        #
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 유저 정보 조회 시 반환되는 최상위 필드명으로 해야 한다.

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  redis:
    host: localhost
    port: 6379

  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL8Dialect

cloud:
  aws:
    credentials:
      access-key: ${ACCESS_KEY}
      secret-key: ${SECRET_KET}
    region:
      static: ${STATIC}
    s3:
      bucket: ${BUCKET}

jwt:
  issuer: songwc3@gmail.com
  a_secret_key: ${A_KEY}
  r_secret_key: ${R_KEY}
